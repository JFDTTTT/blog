(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{369:function(t,v,a){"use strict";a.r(v);var _=a(45),s=Object(_.a)({},(function(){var t=this,v=t.$createElement,a=t._self._c||v;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"正则表达式的拆分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式的拆分"}},[t._v("#")]),t._v(" 正则表达式的拆分")]),t._v(" "),a("h2",{attrs:{id:"结构和操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结构和操作符"}},[t._v("#")]),t._v(" 结构和操作符")]),t._v(" "),a("p",[t._v("结构：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("结构")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("字面量")]),t._v(" "),a("td",[t._v('匹配一个具体字符，包括不用转义的和需要转义的。比如 a 匹配字符 "a"， 又比如 \\n 匹配换行符，又比如 . 匹配小数点。')])]),t._v(" "),a("tr",[a("td",[t._v("字符组")]),t._v(" "),a("td",[t._v("匹配一个字符，可以是多种可能之一，比如 [0-9]，表示匹配一个数字。也有 \\d 的简写形式。 另外还有反义字符组，表示可以是除了特定字符之外任何一个字符，比如 [^0-9]， 表示一个非数字字符，也有 \\D 的简写形式。")])]),t._v(" "),a("tr",[a("td",[t._v("量词")]),t._v(" "),a("td",[t._v('表示一个字符连续出现，比如 a{1,3} 表示 "a" 字符连续出现 3 次。 另外还有常见的简写形式，比如 a+ 表示 "a" 字符连续出现至少一次。')])]),t._v(" "),a("tr",[a("td",[t._v("锚")]),t._v(" "),a("td",[t._v("匹配一个位置，而不是字符。比如 ^ 匹配字符串的开头，又比如 \\b 匹配单词边界， 又比如 (?=\\d) 表示数字前面的位置。")])]),t._v(" "),a("tr",[a("td",[t._v("分组")]),t._v(" "),a("td",[t._v('用括号表示一个整体，比如 (ab)+，表示 "ab" 两个字符连续出现多次， 也可以使用非捕获分组 (?:ab)+。')])]),t._v(" "),a("tr",[a("td",[t._v("分支")]),t._v(" "),a("td",[t._v("多个子表达式多选一，比如 abc")])])])]),t._v(" "),a("p",[t._v("操作符：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("描述")]),t._v(" "),a("th",[t._v("操作符")]),t._v(" "),a("th",[t._v("优先级")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("转义符")]),t._v(" "),a("td",[a("code",[t._v("\\")])]),t._v(" "),a("td",[t._v("1")])]),t._v(" "),a("tr",[a("td",[t._v("括号和方括号")]),t._v(" "),a("td",[a("code",[t._v("(...)、(?:...)、(?=...)、(?!...)、[...]")])]),t._v(" "),a("td",[t._v("2")])]),t._v(" "),a("tr",[a("td",[t._v("量词限定符")]),t._v(" "),a("td",[a("code",[t._v("{m}、{m,n}、{m,}、?、*、+")])]),t._v(" "),a("td",[t._v("3")])]),t._v(" "),a("tr",[a("td",[t._v("位置和序列")]),t._v(" "),a("td",[a("code",[t._v("^、$、\\元字符、一般字符")])]),t._v(" "),a("td",[t._v("4")])]),t._v(" "),a("tr",[a("td",[t._v("管道符(竖杠)")]),t._v(" "),a("td",[a("code",[t._v("\\|")])]),t._v(" "),a("td",[t._v("5")])])])]),t._v(" "),a("p",[t._v("我们来分析一个正则，熟悉一下："),a("code",[t._v("/ab?(c|de*)+|fg/")])]),t._v(" "),a("ul",[a("li",[t._v("由于括号的存在，所以，"),a("code",[t._v("(c|de*)")]),t._v(" 是一个整体结构。")]),t._v(" "),a("li",[t._v("在 "),a("code",[t._v("(c|de*)")]),t._v(" 中，注意其中的量词 ，因此 "),a("code",[t._v("e")]),t._v(" 是一个整体结构。")]),t._v(" "),a("li",[t._v("又因为分支结构 "),a("code",[t._v("|")]),t._v(" 优先级最低，因此 "),a("code",[t._v("c")]),t._v(" 是一个整体、而 "),a("code",[t._v("de*")]),t._v(" 是另一个整体。")]),t._v(" "),a("li",[t._v("同理，整个正则分成了 "),a("code",[t._v("a、b?、(...)+、f、g")]),t._v("。而由于分支的原因， 又可以分成 "),a("code",[t._v("ab?(c|de*)+")]),t._v(" 和 "),a("code",[t._v("fg")]),t._v(" 这两部分。")])]),t._v(" "),a("img",{attrs:{src:t.$withBase("/img/regex/image1.png")}}),t._v(" "),a("h2",{attrs:{id:"注意要点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意要点"}},[t._v("#")]),t._v(" 注意要点")]),t._v(" "),a("h3",{attrs:{id:"匹配字符串整体问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#匹配字符串整体问题"}},[t._v("#")]),t._v(" 匹配字符串整体问题")]),t._v(" "),a("p",[t._v("因为是要匹配整个字符串，我们经常会在正则前后中加上锚 "),a("code",[t._v("^")]),t._v(" 和 "),a("code",[t._v("$")]),t._v("。")]),t._v(" "),a("p",[t._v('比如要匹配目标字符串 "abc" 或者 "bcd" 时，如果一不小心，就会写成 '),a("code",[t._v("/^abc|bcd$/")]),t._v("。")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/img/regex/image2.png")}}),t._v(" "),a("p",[t._v("应该修改成: "),a("code",[t._v("/^(abc|bcd)$/")])]),t._v(" "),a("img",{attrs:{src:t.$withBase("/img/regex/image3.png")}}),t._v(" "),a("h3",{attrs:{id:"量词连缀问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#量词连缀问题"}},[t._v("#")]),t._v(" 量词连缀问题")]),t._v(" "),a("p",[t._v("要求：")]),t._v(" "),a("ul",[a("li",[t._v('每个字符为 "a、"b"、"c" 任选其一，')]),t._v(" "),a("li",[t._v("字符串的长度是 3 的倍数。")])]),t._v(" "),a("p",[t._v("错误："),a("code",[t._v("/^[abc]{3}+$/")]),t._v(" 正确: "),a("code",[t._v("/^([abc]{3})+$/")])]),t._v(" "),a("h3",{attrs:{id:"元字符转义问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#元字符转义问题"}},[t._v("#")]),t._v(" 元字符转义问题")]),t._v(" "),a("p",[t._v("所谓元字符，就是正则中有特殊含义的字符。")]),t._v(" "),a("p",[t._v("所有结构里，用到的元字符总结如下:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("^、$、.、*、+、?、|、\\、/、(、)、[、]、{、}、=、!、:、-\n")])])]),a("p",[t._v("当匹配字符本身时，可使用 "),a("code",[t._v("\\")]),t._v(" 转义")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^$.*+?|\\\\/[]{}=!:-,"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("\\^\\$\\.\\*\\+\\?\\|\\\\\\/\\[\\]\\{\\}\\=\\!\\:\\-\\,")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),a("h3",{attrs:{id:"小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("p",[t._v("这里稍微总结一下，竖杠的优先级最低，即最后运算。 只要知道这一点，就能读懂大部分正则。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("另外关于元字符转义问题，当自己不确定与否时，尽管去转义，总之是不会错的。")])])])}),[],!1,null,null,null);v.default=s.exports}}]);
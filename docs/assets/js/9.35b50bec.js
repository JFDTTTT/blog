(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{366:function(t,a,s){"use strict";s.r(a);var e=s(45),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"字符串匹配攻略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串匹配攻略"}},[t._v("#")]),t._v(" 字符串匹配攻略")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("正则表达式是匹配模式，要么匹配字符，要么匹配位置。 请记住这句话")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://regexr.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("regexr"),s("OutboundLink")],1),t._v(": 小网站加持")]),t._v(" "),s("h2",{attrs:{id:"两种模糊匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#两种模糊匹配"}},[t._v("#")]),t._v(" 两种模糊匹配")]),t._v(" "),s("p",[t._v("正则的的强大之处就是在于它可以实现模糊匹配，在模糊匹配上可以分为两个方向：横向模糊和纵向模糊。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("hello")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nreg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"helloo"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),s("h3",{attrs:{id:"横向模糊匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#横向模糊匹配"}},[t._v("#")]),t._v(" 横向模糊匹配")]),t._v(" "),s("p",[t._v("横向模糊指的是，一个正则可匹配的字符串的长度不是固定的，可以是多种情况的。"),s("br"),t._v("\n其实现的方式是使用量词。譬如 {m,n}，表示连续出现最少 m 次，最多 n 次。")]),t._v(" "),s("p",[s("code",[t._v("/ab{2,5}c/")]),t._v(": 的含义是第一个字符是 a，第二个字符是 b，b 最少出现 2 次最多出现 5 次，第三个字符是 c")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" regex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("ab{2,5}c")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" string "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc abbc abbbc abbbbc abbbbbc abbbbbbc"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nstring"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["abbc", "abbbc", "abbbbc", "abbbbbc"]')]),t._v("\n")])])]),s("h3",{attrs:{id:"纵向模糊匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#纵向模糊匹配"}},[t._v("#")]),t._v(" 纵向模糊匹配")]),t._v(" "),s("p",[t._v('纵向模糊指的是，一个正则匹配的字符串，具体到某一位字符时，它可以不是某个确定的字符，可以有多种 可能。\n其实现的方式是使用字符组。譬如 [abc]，表示该字符是可以字符 "a"、"b"、"c" 中的任何一个。')]),t._v(" "),s("p",[s("code",[t._v("/a[123]b/")]),t._v(': 可以匹配如下三种字符串: "a1b"、"a2b"、"a3b"。')]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" regex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("a[123]b")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" string "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a0b a1b a2b a3b a4b"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstring"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["a1b", "a2b", "a3b"]')]),t._v("\n")])])]),s("h2",{attrs:{id:"字符组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符组"}},[t._v("#")]),t._v(" 字符组")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v('需要强调的是，虽叫字符组(字符类)，但只是其中一个字符。\n例如 [abc]，表示匹配一个字符，它可以是 "a"、"b"、"c" 之一。')])]),t._v(" "),s("h3",{attrs:{id:"范围表示法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#范围表示法"}},[t._v("#")]),t._v(" 范围表示法")]),t._v(" "),s("p",[s("code",[t._v("[1234567abcdefgABCDERG]")]),t._v("可以表示位"),s("code",[t._v("[1-7a-gA-G]")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("[1-9]")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nreg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"asd"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nreg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a1sd"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("因为"),s("code",[t._v("-")]),t._v("有特殊用途，所以要是想表示"),s("code",[t._v("-")]),t._v("字符串的话，可以使用"),s("code",[t._v("\\-")]),t._v("反斜杠转义")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("[1-9\\-]")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nreg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"asd"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nreg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"asd-"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),s("p",[t._v("可以写成如下的方式:[-az] 或 [az-] 或 [a-z]。 即要么放在开头，要么放在结尾，要么转义。总之不会让引擎认为是范围表示法就行了。")]),t._v(" "),s("h3",{attrs:{id:"排除字符组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#排除字符组"}},[t._v("#")]),t._v(" 排除字符组")]),t._v(" "),s("p",[t._v('某位字符可以是任何东西，但就不能是 "a"、"b"、"c"。'),s("br"),t._v(" "),s("code",[t._v("[^abc]")]),t._v(":排除"),s("code",[t._v("a")]),t._v(" "),s("code",[t._v("b")]),t._v(" "),s("code",[t._v("c")])]),t._v(" "),s("p",[t._v("字符组的第一位放 ^(脱字符)，表示求反的概念。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("[^abc]")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"asd"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v("abc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])]),s("h3",{attrs:{id:"常见的简写形式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见的简写形式"}},[t._v("#")]),t._v(" 常见的简写形式")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("字符组")]),t._v(" "),s("th",[t._v("含义")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("\\d")]),t._v(" "),s("td",[t._v("表示 [0-9]。表示是一位数字。 记忆方式:其英文是 digit(数字)")])]),t._v(" "),s("tr",[s("td",[t._v("\\D")]),t._v(" "),s("td",[t._v("表示 [^0-9]。表示除数字外的任意字符。")])]),t._v(" "),s("tr",[s("td",[t._v("\\w")]),t._v(" "),s("td",[t._v("表示 [0-9a-zA-Z_]。表示数字、大小写字母和下划线。 记忆方式:w 是 word 的简写，也称单词字符。")])]),t._v(" "),s("tr",[s("td",[t._v("\\W")]),t._v(" "),s("td",[t._v("表示 [^0-9a-za-z_]。非单词字符。")])]),t._v(" "),s("tr",[s("td",[t._v("\\s")]),t._v(" "),s("td",[t._v("表示 [ \\t\\v\\n\\r\\f]。表示空白符，包括空格、水平制表符、垂直制表符、换行符、回车符、换页 符。")])]),t._v(" "),s("tr",[s("td",[t._v("记忆方式:s 是 space 的首字母，空白符的单词是 white space。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("\\S")]),t._v(" "),s("td",[t._v("表示 [^ \\t\\v\\n\\r\\f]。 非空白符。")])]),t._v(" "),s("tr",[s("td",[t._v(".")]),t._v(" "),s("td",[t._v("表示 [^\\n\\r\\u2028\\u2029]。通配符，表示几乎任意字符。换行符、回车符、行分隔符和段分隔符 除外。")])]),t._v(" "),s("tr",[s("td",[t._v("记忆方式:想想省略号 ... 中的每个点，都可以理解成占位符，表示任何类似的东西")]),t._v(" "),s("td")])])]),t._v(" "),s("p",[t._v("表示任意字符串，可以使用 [\\d\\D]、[\\w\\W]、[\\s\\S] 和 [^] 中任何的一个。")]),t._v(" "),s("h2",{attrs:{id:"量词"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#量词"}},[t._v("#")]),t._v(" 量词")]),t._v(" "),s("p",[t._v("量词也称重复。掌握 {m,n} 的准确含义后，只需要记住一些简写形式。")]),t._v(" "),s("h3",{attrs:{id:"量词简写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#量词简写"}},[t._v("#")]),t._v(" 量词简写")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("量词")]),t._v(" "),s("th",[t._v("含义")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("{m,}")]),t._v(" "),s("td",[t._v("表示至少出现 m 次。")])]),t._v(" "),s("tr",[s("td",[t._v("{m}")]),t._v(" "),s("td",[t._v("等价于 {m,m}，表示出现 m 次。")])]),t._v(" "),s("tr",[s("td",[t._v("?")]),t._v(" "),s("td",[t._v("等价于 {0,1}，表示出现或者不出现。 记忆方式:问号的意思表示，有吗?")])]),t._v(" "),s("tr",[s("td",[t._v("+")]),t._v(" "),s("td",[t._v("等价于 {1,}，表示出现至少一次。 记忆方式:加号是追加的意思，得先有一个，然后才考虑追加。")])]),t._v(" "),s("tr",[s("td",[t._v("*")]),t._v(" "),s("td",[t._v("等价于 {0,}，表示出现任意次，有可能不出现。 记忆方式:看看天上的星星，可能一颗没有，可能零散有几颗，可能数也数不过来。")])])])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("b{1,3}")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ab"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),s("h3",{attrs:{id:"贪婪匹配与惰性匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#贪婪匹配与惰性匹配"}},[t._v("#")]),t._v(" 贪婪匹配与惰性匹配")]),t._v(" "),s("p",[t._v("贪婪匹配")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123 1234 12345 123456"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("\\d{2,5}")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["123", "1234", "12345", "12345"]')]),t._v("\n")])])]),s("p",[t._v("惰性匹配")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123 1234 12345 123456"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("\\d{2,5}?")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["12", "12", "34", "12", "34", "12", "34", "56"]')]),t._v("\n")])])]),s("p",[t._v("其中 /\\d{2,5}?/ 表示，虽然 2 到 5 次都行，当 2 个就够的时候，就不再往下尝试了。")]),t._v(" "),s("p",[t._v("通过在量词后面加个问号就能实现惰性匹配")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("惰性匹配")]),t._v(" "),s("th",[t._v("贪婪匹配")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("{m,n}?")]),t._v(" "),s("td",[t._v("{m,n}")])]),t._v(" "),s("tr",[s("td",[t._v("{m,}?")]),t._v(" "),s("td",[t._v("{m,}")])]),t._v(" "),s("tr",[s("td",[t._v("??")]),t._v(" "),s("td",[t._v("??")])]),t._v(" "),s("tr",[s("td",[t._v("+?")]),t._v(" "),s("td",[t._v("+")])]),t._v(" "),s("tr",[s("td",[t._v("*?")]),t._v(" "),s("td",[t._v("*")])])])]),t._v(" "),s("h2",{attrs:{id:"多选分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多选分支"}},[t._v("#")]),t._v(" 多选分支")]),t._v(" "),s("p",[t._v("(p1|p2|p3)，其中 p1、p2 和 p3 是子模式，用 |(管道符)分隔，表示其中任何之一")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"good idea, nice try."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("good|nice")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["good", "nice"]')]),t._v("\n")])])]),s("p",[t._v("注意一下两种场景")]),t._v(" "),s("p",[t._v('比如我用 /good|goodbye/，去匹配 "goodbye" 字符串时，结果是 "good"')]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"goodbye"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("good|goodbye")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["good"]')]),t._v("\n")])])]),s("p",[t._v("而把正则改成 /goodbye|good/，结果是:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"goodbye"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("goodbye|good")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["goodbye"]')]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("分支结构也是惰性的，即当前面的匹配上了，后面的就不再尝试了。")])]),t._v(" "),s("h2",{attrs:{id:"案例分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#案例分析"}},[t._v("#")]),t._v(" 案例分析")]),t._v(" "),s("h3",{attrs:{id:"十六进制色值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十六进制色值"}},[t._v("#")]),t._v(" 十六进制色值")]),t._v(" "),s("p",[t._v("要求匹配：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("#ffbbad\n#Fc01DF\n#FFF\n#ffE\n")])])]),s("p",[t._v("分析：")]),t._v(" "),s("ul",[s("li",[t._v("以#开头")]),t._v(" "),s("li",[t._v("后面紧跟 [0-9a-fA-F]，次数是 3 次或者 6 次")]),t._v(" "),s("li",[t._v("需要用到量词和分支解构")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("#([1-9a-zA-Z]{3}|[0-9a-zA-Z]{6})$")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#ffff"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"匹配时间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#匹配时间"}},[t._v("#")]),t._v(" 匹配时间")]),t._v(" "),s("p",[t._v("要求匹配")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("23:59\n02:07\n")])])]),s("p",[t._v("分析")]),t._v(" "),s("ul",[s("li",[t._v("共四位数字和：组成")]),t._v(" "),s("li",[t._v("第一位是[012]，第二位[0-9]，但是注意当第一位是[2]时第二位[0-3]")]),t._v(" "),s("li",[t._v("第三位是[0-5]，第四位是[0-9]")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^([01][0-9]|[2][0-3]):[0-5][0-9]$")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"02:07"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[s("code",[t._v("^")]),t._v(': 从头开始匹配（正则 "^abc" 可以匹配"abcd" 但不能匹配"dabc"）'),s("br"),t._v(" "),s("code",[t._v("$")]),t._v(": 正则最后一个字符必须在字符串结尾"),s("br"),t._v('\n同时有^和$表示必须匹配整个字符串如正则"^abc$"匹配字符串"abc"，但不能匹配"abcd"')])]),t._v(" "),s("h3",{attrs:{id:"匹配日期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#匹配日期"}},[t._v("#")]),t._v(" 匹配日期")]),t._v(" "),s("p",[t._v("要求匹配")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("2017-06-10\n")])])]),s("p",[t._v("分析")]),t._v(" "),s("ul",[s("li",[t._v("年：四位数字组成[0-9]{4}")]),t._v(" "),s("li",[t._v("月：0[1-9]|1[0-2]")]),t._v(" "),s("li",[t._v("日：0[1-9]|2[0-9]|3[01]")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[01])$")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2017-06-10"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"window-操作系统文件路径"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#window-操作系统文件路径"}},[t._v("#")]),t._v(" window 操作系统文件路径")]),t._v(" "),s("p",[t._v("要求匹配")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("F:\\study\\javascript\\regex\\regular expression.pdf\nF:\\study\\javascript\\regex\\\nF:\\study\\javascript\nF:\\\n")])])]),s("p",[t._v("分析")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("盘符:\\文件夹\\文件夹\\文件夹\\\n")])])]),s("ul",[s("li",[t._v("匹配磁盘"),s("code",[t._v("f:\\")]),t._v("需要使用 "),s("code",[t._v("[a-zA-Z]:\\\\")]),t._v("，不区分大小写，注意"),s("code",[t._v("\\")]),t._v("需要转义"),s("code",[t._v("\\\\")])]),t._v(" "),s("li",[t._v("文件名称中不能有的特殊字符"),s("code",[t._v('[^\\\\:*<>|"?\\r\\n/]')]),t._v(" "),s("ul",[s("li",[s("code",[t._v("\\\\")]),t._v(" 转义"),s("code",[t._v("\\")])]),t._v(" "),s("li",[s("code",[t._v("\\r")]),t._v(" 回车符")]),t._v(" "),s("li",[s("code",[t._v("\\n")]),t._v(" 换行符")]),t._v(" "),s("li",[t._v("其他都是代表字符表面意思")])])]),t._v(" "),s("li",[t._v("名称不能为空，至少包含一个字符，所以要使用量词 "),s("code",[t._v("+")]),t._v(" , "),s("code",[t._v('[^\\\\:*<>|"?\\r\\n/]+')])]),t._v(" "),s("li",[t._v("文件夹后必须要跟\\， "),s("code",[t._v('[^\\\\:*<>|"?\\r\\n/]+\\\\')])]),t._v(" "),s("li",[s("code",[t._v("f:\\")]),t._v(",允许文件不存在的情况，所以使用量词*，不限制出现次数，"),s("code",[t._v('([^\\\\:*<>|"?\\r\\n/]+\\\\)\\*')])]),t._v(" "),s("li",[t._v("最后一个可能是文件，所以最后一个有可能是不带"),s("code",[t._v("\\")]),t._v("，所以添加"),s("code",[t._v('([^\\\\:*<>|"?\\r\\n/]+)？')])])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v('^[a-zA-Z]:\\\\([^\\\\:*<>|"?\\r\\n/]+\\\\)*([^\\\\:*<>|"?\\r\\n/]+)?$')]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("F:\\\\study\\\\javascript\\\\regex\\\\asdasd.asd")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("在 JavaScript 中字符串要表示字符 \\ 时，也需要转义。")])]),t._v(" "),s("h3",{attrs:{id:"匹配-id"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#匹配-id"}},[t._v("#")]),t._v(" 匹配 id")]),t._v(" "),s("p",[t._v('要求匹配：从下面的 html 中提取出 id="container"')]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<div id="container" class="main"></div>\n')])])]),s("p",[t._v("分析")]),t._v(" "),s("ul",[s("li",[t._v('匹配 id="到"内容')]),t._v(" "),s("li",[s("code",[t._v(".")]),t._v("是通配符，查找单个字符，除了换行和行结束符。"),s("code",[t._v(".*")])]),t._v(" "),s("li",[t._v("但是 * 又是贪婪的，当遇到 container 后面双引号时，是不会 停下来，会继续匹配，直到遇到最后一个双引号为止。实际匹配结果是 "),s("code",[t._v('id="container" class="main"')])]),t._v(" "),s("li",[t._v("解决贪婪匹配问题，"),s("code",[t._v(".*?")])])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'<div id="container" class="main"></div>\'')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v('id=".*?"')]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["id="container"", index: 5, input: "<div id="container" class="main"></div>", groups: undefined]')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'<div id="container" class="main"></div>\'')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v('id="(.*?)"')]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["id="container"", "container", index: 5, input: "<div id="container" class="main"></div>", groups: undefined]')]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("match方法结果返回是数组，数组的长度是有正则的个数决定的，就是（），后面会写到")])])])}),[],!1,null,null,null);a.default=r.exports}}]);